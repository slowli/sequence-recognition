/**
 * Пакет, содержащий классы и интерфейсы, формализующие основные понятия 
 * для алгоритмов распознавания скрытых последовательностей.
 * 
 * <h3>Постановка задачи распознавания</h3>
 * Задача распознавания скрытых последовательностей возникает, в частности, 
 * в двух задачах биоинформатики: <a href="http://en.wikipedia.org/wiki/Gene_prediction">распознавании генов</a> 
 * и <a href="http://en.wikipedia.org/wiki/Protein_structure_prediction">предсказании вторичной структуры белка</a>:
 * <blockquote>
 * <p><b>Задача.</b> По заданной последовательности нуклеотидов гена определить их принадлежность 
 * структурным фрагментам — экзонам и интронам.
 * <p><b>Задача.</b> По заданной последовательности аминокислот, составляющих белок, 
 * определить их принадлежность пространственным структурам.
 * </blockquote>
 * Эти задачи допускают общую формулировку:
 * <blockquote>
 * <b>Задача.</b> По заданной последовательности <em>наблюдаемых состояний</em> определить 
 * соответствующую им последовательность <em>скрытых состояний</em> (<code>i</code>-е скрытое состояние 
 * соответствует <code>i</code>-му наблюдаемому состоянию), которая максимизирует 
 * определенный критерий качества.
 * </blockquote>
 * 
 * <h3>Полные состояния</h3>
 * Полным состоянием называется упорядоченная пара из наблюдаемого и соответствующего ему 
 * скрытого состояния. Так, для задачи распознавания фрагментов генов отдельное полное состояние 
 * включает в себя информацию о каком-то нуклеотиде и его принадлежности экзону или интрону. 
 * Задача оптимизации в терминах полных состояний имеет следующий вид:
 * <blockquote>
 * <b>Задача.</b> Восстановить строку полных состояний, которая имеет заданную наблюдаемую часть 
 * и оптимизирует определенный критерий качества.
 * </blockquote>
 */
package ua.kiev.icyb.bio;