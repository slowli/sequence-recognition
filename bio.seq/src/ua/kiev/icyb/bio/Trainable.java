package ua.kiev.icyb.bio;


/**
 * Интерфейс для объектов, обладающих обучаемыми параметрами.
 * 
 * Примером такой объекта является марковская цепь,
 * которая обладает как <em>управляющими</em> параметрами, которые задаются при создании экземпляра класса и
 * не изменяются при обучении (например, порядок цепи), так и параметрами, зависящими
 * от процесса обучения на прецедентах (например, начальные и переходные вероятности).
 * 
 * <p>Данный интерфейс не определяет методов, соответствующих обучению на прецедентах;
 * они должны быть определены в реализациях.
 */
public interface Trainable extends Cloneable {
	
	Object clone();
	
	/**
	 * Создает копию рассматриваемого объекта. В отличие от метода {@link Object#clone()},
	 * под копией подразумевается объект с теми же управляющими параметрами,
	 * но без учета данных, полученных в результате обучения на прецедентах.
	 * Таким образом, возвращаемый объект по своему состоянию эквилентен последовательности вызовов
	 * {@link Object#clone()} и {@link #reset()}. Различие заключается в том, что этот метод
	 * может выделять существенно меньше памяти, чем при вызове {@link Object#clone()}.
	 * 
	 * @return
	 *    копия объекта, обладающая теми же управляющими параметрами
	 */
	Object clearClone();
	
	/**
	 * Сбрасывает результаты обучения.
	 */
	void reset();
}
