#!/bin/bash

function usage() {
cat <<EOF
Usage: `basename $0` [OPTION...] DATASET TREE-FILE

Generates the binary partition tree for a specified dataset.
The tree is saved to a specified file.

Options:
    -h, --help
               print this help and quit
    -e, --env
               set the configuration file for environment
    -m, --min-size
               specify the minimal size of a partition (default is 1000)
    -o, --save
               specify the name of the file to save algorithm data to.
               Default filename is TREE-FILE.run.
    -O, --order
               use the specified order of Markov chains (default is 5)
    -t, --size
               specify the desired tree size (default is 5)

Example:
    `basename $0` -m 500 -O 6 -t 4 elegans elegans.tree
               Creates a tree consisting of four predicates using 6th order
               Markov chains from "elegans" dataset; the minimal size
               of a partition is set to 500. The resulting tree is saved to
               "elegans.tree", and the algorithm data is stored in
               "elegans.tree.run".
EOF
}

. `dirname $0`/setenv.sh

run_class=ua.kiev.icyb.bio.tools.TreeGen

min_size=1000
alg_file=
chain_order=5
tree_size=5

while [ $# -gt 0 ]; do
	case "$1" in
		-h | --help)
			usage; exit 0 ;;
		-e | --env)
			shift; ENV_FILE=$1; shift ;;
		-m | --min-size)
			shift; min_size=$1; shift ;;
		-o | --save)
			shift; alg_file=$1; shift ;;
		-O | --order)
			shift; chain_order=$1; shift ;;
		-t | --size)
			shift; tree_size=$1; shift ;;
		-*) echo "Unknown option: $1"; exit 1 ;;
		*) break ;;
	esac
done

if [ $# -lt 2 ]; then
	echo "Missing required argument. Type '`basename $0` -h' to get help."
	exit 1
fi

if [[ "x$alg_file" == "x" ]]; then
	alg_file="$2.run"
fi

java $JAVAOPTS -cp $CLASSPATH $run_class $ENV_FILE "$1" "$alg_file" \
	"order=$chain_order" \
	"minPartSize=$min_size" \
	"treeSize=$tree_size" \
	"treeFile=$2"

